name: Develop PHP Unit Tests
on:
  push:
    branches:
      - develop

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        php: [8.0, 8.2]
        laravel: [9.*, 10.*]
        stability: [prefer-stable]
        exclude:
          - laravel: 10.*
            php: 8.0

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }} - ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, xdebug, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: xdebug
            
      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Get Composer Cache Directory
          id: composer-cache
          run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
          uses: actions/cache@v3
            with:
              path: ${{ steps.composer-cache.outputs.dir }}
              key: ${{ runner.os }}-composer-${{ runner.php }}-${{ hashFiles('**/composer.lock') }}
              restore-keys: |
                ${{ runner.os }}-composer-${{ runner.php }}-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: composer require "laravel/framework:${{ matrix.laravel }}" --no-interaction --no-update

      - name: Update dependencies
        run: composer update --${{ matrix.stability }} --prefer-dist --no-interaction         

      - name: Run Unit Tests
        run: XDEBUG_MODE_COVERAGE=coverage vendor/bin/phpunit

      - name: phpunit-coverage-badge
        uses: timkrase/phpunit-coverage-badge@v1.2.1
        with:
          coverage_badge_path: './ /phpunit-coverage-develop.svg'
          push_badge: true
          repo_token: ${{ secrets.GITHUB_TOKEN }}
